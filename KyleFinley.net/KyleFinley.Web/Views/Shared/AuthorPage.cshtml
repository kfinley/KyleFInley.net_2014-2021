@model _928.Web.Mvc.AuthorViewData<KyleFinley.Models.Page>


@using _928.Web.Mvc
@using KyleFinley.Models
@using KyleFinley.Web.Models

<div class="row">
    <div class="col-md-12">
        <h1>@Model.Title</h1>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        @if (Model.Saved) {
            <h2 class="alert-success">Article Saved</h2>
        }
    </div>
</div>

@if (Model.AuthorMode == AuthorMode.Review) {
    <div class="row section">

        <div class="col-md-12 section-header">
            Share URL Clicks
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class="short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.TwitterShareUrlClicks != null), NamedRoutes.Manage,
                    new { controller = "ShortUrlAnalytics", id = Model.Entity.TwitterShareShortUrl == null ? string.Empty : Model.Entity.TwitterShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>Twitter Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.TwitterShareUrlClicks != null ? Model.Entity.TwitterShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class=" short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.GoogleShareUrlClicks != null), NamedRoutes.Manage,
                    new { controller = "ShortUrlAnalytics", id = Model.Entity.GoogleShareShortUrl == null ? string.Empty : Model.Entity.GoogleShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>Google Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.GoogleShareUrlClicks != null ? Model.Entity.GoogleShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class="short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.LinkedInShareUrlClicks != null), NamedRoutes.Manage,
                    new { controller = "ShortUrlAnalytics", id = Model.Entity.LinkedInShareShortUrl == null ? string.Empty : Model.Entity.LinkedInShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>LinkedIn Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.LinkedInShareUrlClicks != null ? Model.Entity.LinkedInShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class="short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.FacebookShareUrlClicks != null), NamedRoutes.Manage,
                    new { controller = "ShortUrlAnalytics", id = Model.Entity.FacebookShareShortUrl == null ? string.Empty : Model.Entity.FacebookShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>Facebook Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.FacebookShareUrlClicks != null ? Model.Entity.FacebookShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class="short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.PinterestShareUrlClicks != null), NamedRoutes.Manage,
                new { controller = "ShortUrlAnalytics", id = Model.Entity.PinterestShareShortUrl == null ? string.Empty : Model.Entity.PinterestShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>Pinterest Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.PinterestShareUrlClicks != null ? Model.Entity.PinterestShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-xs-6">
            <div class="short-url-clicks">
                @using (Html.BeginRouteLinkIf((Model.Entity.EmailShareUrlClicks != null), NamedRoutes.Manage,
                new { controller = "ShortUrlAnalytics", id = Model.Entity.EmailShareUrlClicks == null ? string.Empty : Model.Entity.EmailShareShortUrl.Key }, new { @class = "no-underline" }, lowerCaseUrl: false)) {
                    <p>Email Clicks</p>
                    <p class="short-url-clicks-number">@(Model.Entity.EmailShareUrlClicks != null ? Model.Entity.EmailShareUrlClicks.ShortUrlClicks.ToString() : "N/A")</p>
                }
            </div>
        </div>
    </div>
}
<div class="row section">
    <div class="col-md-12 section-header">
        @Model.PageType Details &amp; Settings
    </div>
    @using (Html.BeginForm()) {

        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Entity.Id)
            <div class="form-group row">
                <div class="col-md-7">
                    @Html.LabelFor(model => model.Entity.Title, htmlAttributes: new { @class = "col-md-8" })
                    @Html.EditorFor(model => model.Entity.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Entity.Title, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @using (Html.BeginLabelFor(model => model.Entity.Enabled, new { @class = "checkbox" })) {
                    @Html.CheckBoxFor(model => model.Entity.Enabled)
                    }
                    @Html.ValidationMessageFor(model => model.Entity.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Entity.Description, htmlAttributes: new { @class = "col-md-12" })
                    @Html.EditorFor(model => model.Entity.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Entity.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class=" col-md-6">
                    @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "col-md-6" })
                    @if (Model.AuthorMode == AuthorMode.Create) {
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    } else {
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    }
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Entity.PageImage, htmlAttributes: new { @class = "col-md-6" })
                    @Html.EditorFor(model => model.Entity.PageImage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Entity.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Entity.Content, "Article Content", new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.Entity.Content, new { @class = "form-control", style = "width: 100%; height: 500px;" })
                    @Html.ValidationMessageFor(model => model.Entity.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12">
                    <input type="submit" value="Save Article" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
